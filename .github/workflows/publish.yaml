name: Publish/rebuild the latest container image to Docker Hub

on:
  schedule:
    - cron:  '21 3 * * *'
  push:
    branches:
      - 'main'

env:
  REGISTRY: index.docker.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKERHUB_USERNAME: weiren2

jobs:
  check:
    name: Check if the base image has any updates
    runs-on: ubuntu-latest
    outputs:
      needs-updating: ${{ steps.check.outputs.needs-updating }}
    steps:
      - name: Check updates from Docker Hub
        id: check
        uses: lucacome/docker-image-update-checker@v1
        with:
          base-image: node:latest
          image: ${{ env.IMAGE_NAME }}:latest
          platforms: linux/amd64,linux/arm64

  push_to_registry:
    name: Push Docker image to Docker Hub
    needs: check
    if: (github.event_name == 'schedule' && needs.check.outputs.needs-updating == 'true') || (github.event_name == 'push')
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out code/repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Extract metadata (tags, labels) on Docker Hub
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

